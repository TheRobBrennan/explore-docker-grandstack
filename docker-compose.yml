version: '3'

services:

  # # Neo4j v4.0
  # neo4j:  # Official image available at https://hub.docker.com/_/neo4j
  #   build: ./neo4j/v4.0.x
  #   ports:
  #     - 7474:7474 # HTTP
  #     - 7473:7473 # HTTPS
  #     - 7687:7687 # Bolt
  #   environment:
  #     - NEO4J_dbms_security_procedures_unrestricted=apoc.*
  #     - NEO4J_apoc_import_file_enabled=true
  #     - NEO4J_apoc_export_file_enabled=true
  #     - NEO4J_dbms_shell_enabled=true

  #   # Uncomment the following section if you want to persist Neo4j settings and data
  #   # volumes:
  #   #   # Stores the authentication and roles for each database, as well as the actual data contents of each database instance (in graph.db folder)
  #   #   - ./neo4j/tmp/data:/data

  #   #   # Outputting the Neo4j logs to a place outside the container ensures we can troubleshoot any errors in Neo4j, even if the container crashes.
  #   #   - ./neo4j/tmp/logs:/logs

  #   #   # Binds the import directory, so we can copy CSV or other flat files into that directory for importing into Neo4j.
  #   #   # Load scripts for importing that data can also be placed in this folder for us to execute.
  #   #   - ./neo4j/tmp/import:/var/lib/neo4j/import

  #   #   # Sets up our plugins directory. If we want to include any custom extensions or add the Neo4j APOC or graph algorithms library,
  #   #   # exposing this directory simplifies the process of copying the jars for Neo4j to access.
  #   #   - ./neo4j/tmp/plugins:/plugins
  #   # # See https://neo4j.com/developer/docker-run-neo4j/ for additional configuration ideas

  # Neo4j v3.5
  neo4j:  # Official image available at https://hub.docker.com/_/neo4j
    build: ./neo4j/v3.5.x
    ports:
      - 7474:7474 # HTTP
      - 7473:7473 # HTTPS
      - 7687:7687 # Bolt
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_dbms_shell_enabled=true

    # Uncomment the following section if you want to persist Neo4j settings and data
    # volumes:
    #   # Stores the authentication and roles for each database, as well as the actual data contents of each database instance (in graph.db folder)
    #   - ./neo4j/tmp/data:/data

    #   # Outputting the Neo4j logs to a place outside the container ensures we can troubleshoot any errors in Neo4j, even if the container crashes.
    #   - ./neo4j/tmp/logs:/logs

    #   # Binds the import directory, so we can copy CSV or other flat files into that directory for importing into Neo4j.
    #   # Load scripts for importing that data can also be placed in this folder for us to execute.
    #   - ./neo4j/tmp/import:/var/lib/neo4j/import

    #   # Sets up our plugins directory. If we want to include any custom extensions or add the Neo4j APOC or graph algorithms library,
    #   # exposing this directory simplifies the process of copying the jars for Neo4j to access.
    #   - ./neo4j/tmp/plugins:/plugins
    # # See https://neo4j.com/developer/docker-run-neo4j/ for additional configuration ideas

  server:
    build: ./server
    ports:
      - 8000:8000
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=letmein
      - GRAPHQL_LISTEN_PORT=8000
      - GRAPHQL_URI=http://localhost:8000/graphql
    volumes:
      # Map our local directory to the Docker container so our changes can immediately take effect
      - ./server/src:/app/src
      # Use the node_modules installed on the Docker image
      - /app/node_modules
    links:
    - neo4j
    depends_on:
    - neo4j

  app:
    build: ./app
    ports:
      - 3000:3000
    environment:
      - REACT_APP_GRAPHQL_URI=http://localhost:8000/graphql
      - PROXY=http://localhost:8000/graphql
    links:
    - server
    depends_on:
    - server
